{"version":3,"file":"static/js/506.2e0114c8.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"add_info\":\"MovieDetails_add_info__Em791\",\"list\":\"MovieDetails_list__dbNMP\",\"item\":\"MovieDetails_item__mbUY+\",\"link\":\"MovieDetails_link__U+v+7\"};","import { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/API';\nimport { toast } from 'react-toastify';\nimport s from '../MovieDetails/MovieDetails.module.css';\nimport { Loader } from 'components/Loader';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nexport const MovieDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [status, setStatus] = useState(Status.IDLE);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      if (!movieId) {\n        return;\n      }\n      setStatus(Status.PENDING);\n      try {\n        const { data } = await getMovieDetails(movieId);\n\n        if (!data) {\n          setStatus(Status.REJECTED);\n          setMovieDetails([]);\n          return toast.warn('No information');\n        } else {\n          setStatus(Status.RESOLVED);\n          setMovieDetails(data);\n        }\n      } catch {\n        setStatus(Status.REJECTED);\n      }\n    })();\n  }, [movieId]);\n\n  if (!movieDetails && status === Status.IDLE) {\n    return <></>;\n  }\n\n  if (!movieDetails && status === Status.PENDING) {\n    return <Loader />;\n  }\n  if (!movieDetails && status === Status.REJECTED) {\n    return toast.warn('Error');\n  }\n\n  if (movieDetails && status === Status.RESOLVED) {\n    const {\n      poster_path,\n      original_title,\n      release_date,\n      vote_average,\n      overview,\n      genres,\n    } = movieDetails;\n\n    return (\n      <>\n        <Link to={location.state?.from || `/`}>{'Go back'}</Link>\n        <div className={s.wrapper}>\n          <img\n            src={\n              `https://image.tmdb.org/t/p/w500${poster_path}`\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : 'no image'\n            }\n            alt={original_title}\n            width=\"280\"\n          />\n          <div className={s.mvieDetails}>\n            <h2 className={s.title}>\n              {original_title}({release_date.slice(0, 4)})\n            </h2>\n            <p>User score: {(vote_average * 10).toFixed(0)}%</p>\n            <h3 className={s.title}>Overview</h3>\n            <p className={s.overview}>{overview}</p>\n            <h3 className={s.title}>Genres</h3>\n            <p className={s.genres}>\n              {genres.length > 0\n                ? genres.map(item => item.name).join(', ')\n                : 'no info'}\n            </p>\n          </div>\n\n          <div className={s.add_info}>\n            <h3 className={s.title}>Additional information</h3>\n            <ul className={s.list}>\n              <li className={s.item}>\n                <Link\n                  to={`/movies/${movieId}/cast`}\n                  state={location.state}\n                  className={s.link}\n                >\n                  Cast\n                </Link>\n              </li>\n              <li className={s.item}>\n                <Link\n                  to={`/movies/${movieId}/reviews`}\n                  state={location.state}\n                  className={s.link}\n                >\n                  Reviews\n                </Link>\n              </li>\n            </ul>\n          </div>\n          <Outlet />\n        </div>\n      </>\n    );\n  }\n};","import axios from 'axios';\n\nconst API_KEY = '5787548457546c05a58e27934de5db16';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const getTrending = async () => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getSearchMovies = async query => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieDetails = async movieId => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieСredits = async movieId => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getMovieReviews = async movieId => {\n  try {\n    const data = await axios.get(\n      `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};"],"names":["Status","MovieDetails","useState","movieDetails","setMovieDetails","status","setStatus","movieId","useParams","location","useLocation","useEffect","getMovieDetails","data","toast","Loader","poster_path","original_title","release_date","vote_average","overview","genres","to","state","from","className","s","src","alt","width","slice","toFixed","length","map","item","name","join","API_KEY","BASE_URL","getTrending","axios","console","log","getSearchMovies","query","getMovieСredits","getMovieReviews"],"sourceRoot":""}